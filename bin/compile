#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>



# ------------------------------------------------------------
# Configure directories
# ------------------------------------------------------------
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
TMP_DIR=$(mktemp -d)
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)
PROFILE_SCRIPT="$BUILD_DIR/.profile.d/mysql.sh"
# ------------------------------------------------------------



# ------------------------------------------------------------
# Configure environment
# ------------------------------------------------------------
set -eo pipefail   # don't ignore exit codes when piping output
# ------------------------------------------------------------



# ------------------------------------------------------------
VERSION=mysql-8.0.12-linux-glibc2.12-x86_64
# ------------------------------------------------------------



# ------------------------------------------------------------
download_and_unpack() {
# ------------------------------------------------------------
  echo '       * Downloading source code'
  curl -# -L -o "$TMP_DIR/$VERSION.tar.xz" "https://dev.mysql.com/get/Downloads/MySQL-8.0/$VERSION.tar.xz"

  echo '       * Unpacking'
  tar -C "$CACHE_DIR" -xJf "$TMP_DIR/$VERSION.tar.xz"
  cp "$BP_DIR"/lib/lib*.so* "$CACHE_DIR/$VERSION/lib"  
}
# ------------------------------------------------------------



# ------------------------------------------------------------
install() {
# ------------------------------------------------------------
  echo '       * Installing'
  mkdir -p "$BUILD_DIR/.heroku/vendor"
  cp -r "$CACHE_DIR/$VERSION" "$BUILD_DIR/.heroku/vendor/mysql"
}
# ------------------------------------------------------------




# ------------------------------------------------------------
configure() {
# ------------------------------------------------------------
  echo '       * Setup'

  cd "$BUILD_DIR/.heroku/vendor/mysql"

  mkdir -p mysql-files
  chmod 750 mysql-files

  mkdir -p data
  chmod 750 data

  export LD_LIBRARY_PATH=lib:${LD_LIBRARY_PATH:-}

  find . -not \( -name 'bin' -or -name 'lib' -or -name 'share'  \) -maxdepth 1 -mindepth 1 -exec rm -rf {} \;
  find lib -type d -maxdepth 1 -mindepth 1 -exec rm -rf {} \;
  find bin -type f -not \( -name '*mysqld' -or -name '*mysqldump' -or -name '*mysql_ssl_rsa_setup' -or -name '*mysql'  -or -name '*mysqladmin' \) -delete
  
  bin/mysqld --initialize-insecure  --datadir=data
  bin/mysql_ssl_rsa_setup --datadir=data
}
# ------------------------------------------------------------




##############################################################

if [ ! -d $CACHE_DIR/$VERSION ]; then
  download_and_unpack
fi

install

configure

##############################################################


